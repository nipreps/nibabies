[build-system]
requires = ["hatchling", "hatch-vcs", "nipreps-versions"]
build-backend = "hatchling.build"

[project]
name = "nibabies"
description = "Processing workflows for magnetic resonance images of the brain in infants"
readme = "long_description.md"
authors = [{name = "The NiPreps Developers", email = "nipreps@gmail.com"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = {file = "LICENSE"}
requires-python = ">=3.10"
dependencies = [
    "acres",
    "nibabel >= 5.0.0",
    "nipype >= 1.8.5",
    "nireports >= 23.2.0",
    "nitime",
    "nitransforms >= 24.1.1",
    "niworkflows >= 1.13.1",
    "numpy >= 1.21.0",
    "packaging",
    "pandas",
    "pooch",
    "psutil >= 5.4",
    "pybids >= 0.15.0",
    "requests",
    "sdcflows >= 2.13.0",
    "smriprep >= 0.17.0",
    "tedana >= 23.0.2",
    "templateflow >= 24.2.0",
    "toml",
    "typing_extensions; python_version<'3.11'",
]
dynamic = ["version"]

[project.urls]
Documentation = "https://nibabies.readthedocs.io/en/latest/"
"Source Code" = "https://github.com/nipreps/nibabies"
"Bug Tracker" = "https://github.com/nipreps/nibabies/issues"
"Docker Images" = "https://hub.docker.com/r/nipreps/nibabies"

[project.optional-dependencies]
container = [
    "nibabies[telemetry]",
    "datalad",
    "datalad-osf",
]
dev = [
    "ruff",
    "pre-commit",
]
doc = [
    "pydot >= 1.2.3",
    "sphinx >= 1.8",
    "sphinx-argparse",
    "shibuya",
    "myst_parser",
    "sphinx-togglebutton",
    "sphinxcontrib.bibtex",
]
duecredit = ["duecredit"]
maint = [
    "fuzzywuzzy",
    "python-Levenshtein",
]
test = [
    "coverage[toml]",
    "pytest",
    "pytest-cov",
    "pytest-env",
    "pytest-xdist",
]
telemetry = ["migas >= 0.4.0"]
# Aliases
docs = ["nibabies[doc]"]
tests = ["nibabies[test]"]
all = ["nibabies[dev,doc,maint,telemetry,test]"]

[project.scripts]
nibabies = "nibabies.cli.run:main"
nibabies-mcribs = "nibabies.cli.mcribs:main"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]  # No longer needed in sdist

[tool.hatch.build.targets.wheel]
packages = ["nibabies"]

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "nipreps-calver" }

[tool.hatch.build.hooks.vcs]
version-file = "nibabies/_version.py"

#
# Developer tool configurations
#

[tool.black]
exclude = ".*"

[tool.flake8]
max-line-length = "99"
doctests = "False"
exclude = "*build/"
ignore = ["W503", "E203"]
per-file-ignores = [
    "**/__init__.py : F401",
    "docs/conf.py : E265",
]

[tool.pytest.ini_options]
minversion = "6"
testpaths = ["nibabies"]
log_cli_level = "INFO"
xfail_strict = true
norecursedirs = [".git"]
addopts = [
  "-svx",
  "-ra",
  "--strict-config",
  "--strict-markers",
  "--doctest-modules",
  # Config pytest-cov
  "--cov=nibabies",
  "--cov-report=xml",
  "--cov-config=pyproject.toml",
]
doctest_optionflags = "ALLOW_UNICODE NORMALIZE_WHITESPACE ELLIPSIS"
env = "PYTHONHASHSEED=0"
filterwarnings = ["ignore::DeprecationWarning"]
junit_family = "xunit2"

[tool.ruff]
line-length = 99
extend-exclude = [
  "wrapper/**",
  ".maint/**",
  "scripts/**",
  "docs/**",
]

[tool.ruff.lint]
extend-select = [
  "F",
  "E",
  "W",
  "I",
  "UP",
  "YTT",
  "S",
  "BLE",
  "B",
  "A",
  # "CPY",
  "C4",
  "DTZ",
  "T10",
  # "EM",
  "EXE",
  "FA",
  "ISC",
  "ICN",
  "PT",
  "Q",
]
extend-ignore = [
  "S311",  # We are not using random for cryptographic purposes
  "ISC001",
  "S603",
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.extend-per-file-ignores]
"*/test_*.py" = ["S101"]
"nibabies/utils/debug.py" = ["A002", "T100"]
"docs/conf.py" = ["A001"]
"docs/sphinxext/github_link.py" = ["BLE001"]

[tool.ruff.format]
quote-style = "single"

[tool.coverage.run]
branch = true
omit = [
    "*/_version.py"
]

[tool.coverage.paths]
source = [
  "nibabies",
  "**/site-packages/nibabies"
]
